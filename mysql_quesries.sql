create database walmart_db;

use walmart_db;

SHOW TABLES;

-- BUSINESS PROBLEMS
-- Q1-Question: What are the different payment methods, and how many transactions and items were sold with each method? 
select  payment_method, sum(quantity) as no_quantity_sold, count(*) as no_payments
from walmart 
group by payment_method 
order by  sum(quantity) desc ; -- or order by count(*) 

-- Q2 -Which category received the highest average rating in each branch?
 
select * from 
(
  select Branch,
         avg_rating,
         category,
         Rank() over (Partition by Branch order by avg_rating desc) as rating_rank
  from 
  (
    select Branch,
           avg(rating) as avg_rating,
           category
    from walmart
    group by Branch, category
  ) as inner_subquery -- In SQL, every subquery (derived table) must have an alias. 
) as outer_subquery
where rating_rank = 1;


-- Q3- What is the busiest day of the week for each branch based on transaction
-- volume? 
SELECT date,
       DAYNAME(STR_TO_DATE(date, '%d/%m/%y')) AS day_name
FROM walmart;
ALTER TABLE walmart ADD COLUMN day_name VARCHAR(10);
SET sql_safe_updates = 1;

UPDATE walmart
SET day_name = DAYNAME(STR_TO_DATE(date, '%d/%m/%y'));

select * From(
SELECT 
    branch, 
    day_name, 
    no_of_transac,
    RANK() OVER (PARTITION BY branch ORDER BY no_of_transac DESC) AS rating_rank
FROM (
    SELECT 
        branch, 
        day_name, 
        COUNT(*) AS no_of_transac
    FROM walmart
    GROUP BY branch, day_name
) AS sub
ORDER BY branch, no_of_transac DESC) as jethiya
where rating_rank=1;        ;



-- Q4-Question: How many items were sold through each payment method? 
select payment_method, sum(quantity) from walmart
group by payment_method;


-- Q5- What are the average, minimum, and maximum ratings for each category in each city?

select city ,category, avg(rating),max(rating), min(rating) from walmart
group by city , category
order by city ;


-- Q-6- Question: What is the total profit for each category, ranked from highest to lowest?
select category , sum(profit_margin*total) as total_Profit, sum(total) as total_revenue
from walmart
group by category
order by total_Profit desc;


-- Q-7 What is the most frequently used payment method in each branch?
-- display branch and preferred payment_method 
with data as (SELECT
    branch,
    payment_method,
    COUNT(*) AS total_trans,
    RANK() OVER(PARTITION BY branch ORDER BY COUNT(*) DESC) AS rankin
FROM walmart
GROUP BY branch, payment_method) 
select * from data where rankin=1;


-- Q8-How many transactions occur in each shift (Morning, Afternoon, Evening)
-- across branches?

SELECT 
 branch,
    CASE
        WHEN HOUR(STR_TO_DATE(time, '%H:%i:%s')) < 12 THEN 'Morning'
        WHEN HOUR(STR_TO_DATE(time, '%H:%i:%s')) BETWEEN 12 AND 17 THEN 'Afternoon'
        ELSE 'Evening'
    END AS day_time,
    count( *) as no_of_payments
FROM walmart
group by day_time ,branch
order by branch , no_of_payments desc;



 -- Q9-Identify 5 branch with highest decrese ratio in revevenue compare to last year (current year
-- 2023 and last year 2022) 


 WITH revenue_2022 AS (
    SELECT 
        branch,
        SUM(total) AS revenue
    FROM walmart
    WHERE YEAR(STR_TO_DATE(date, '%d/%m/%Y')) = 2022
    GROUP BY branch
),
revenue_2023 AS (
    SELECT 
        branch,
        SUM(total) AS revenue
    FROM walmart
    WHERE YEAR(STR_TO_DATE(date, '%d/%m/%Y')) = 2023
    GROUP BY branch
)
SELECT 
    r2022.branch,
    r2022.revenue AS last_year_revenue,
    r2023.revenue AS current_year_revenue,
    ROUND(((r2022.revenue - r2023.revenue) / r2022.revenue) * 100, 2) AS revenue_decrease_ratio
FROM revenue_2022 AS r2022
JOIN revenue_2023 AS r2023 ON r2022.branch = r2023.branch
WHERE r2022.revenue > r2023.revenue
ORDER BY revenue_decrease_ratio DESC
LIMIT 5;

-- Q10-Write an SQL query to compare the revenue generated by each branch in the current week with the previous week. 
-- Display the branch name, revenue of the last week, revenue of the current week,
--  and the percentage growth in revenue for branches where revenue has increased.
--  Sort the result by the revenue growth percentage in descending order and limit the output to the top 5 branches.

WITH current_week AS (
    SELECT 
        branch,
        SUM(total) AS revenue
    FROM walmart
    WHERE 
        YEAR(STR_TO_DATE(date, '%d/%m/%Y')) = YEAR(CURDATE())
        AND WEEK(STR_TO_DATE(date, '%d/%m/%Y')) = WEEK(CURDATE())
    GROUP BY branch
),
last_week AS (
    SELECT 
        branch,
        SUM(total) AS revenue
    FROM walmart
    WHERE 
        YEAR(STR_TO_DATE(date, '%d/%m/%Y')) = YEAR(CURDATE())
        AND WEEK(STR_TO_DATE(date, '%d/%m/%Y')) = WEEK(CURDATE()) - 1
    GROUP BY branch
)
SELECT 
    lw.branch,
    lw.revenue AS last_week_revenue,
    cw.revenue AS current_week_revenue,
    ROUND(((cw.revenue - lw.revenue) / lw.revenue) * 100, 2) AS revenue_growth_percent
FROM last_week AS lw
JOIN current_week AS cw ON lw.branch = cw.branch
WHERE cw.revenue > lw.revenue
ORDER BY revenue_growth_percent DESC
LIMIT 5;

